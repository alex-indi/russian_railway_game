# app.py
import streamlit as st
import config as cfg
import game_engine as ge


def get_wagon_fill_html(contents, capacity):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –≤–∞–≥–æ–Ω–∞."""
    html = ''
    for i in range(capacity):
        html += cfg.GOODS_HTML.get(contents[i]['good'] if i < len(contents) else None, cfg.GOODS_HTML[None])
    return html


def get_platform_fill_html(contents, capacity):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã."""
    html = ''
    for i in range(capacity):
        html += cfg.PLATFORM_FULL if i < len(contents) else cfg.PLATFORM_EMPTY
    return html


# --- –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ì–†–´ –ò –ù–ê–°–¢–†–û–ï–ö ---
if 'game_settings' not in st.session_state:
    st.session_state.game_settings = {
        'STARTING_MONEY': cfg.STARTING_MONEY, 'REPAIR_LOCO': cfg.REPAIR_LOCO,
        'REPAIR_WAGON': cfg.REPAIR_WAGON, 'GOODS_PRICES': cfg.GOODS_PRICES.copy(),
        'WAGON_PRICES': cfg.WAGON_PRICES.copy(), 'WAGON_INFO': cfg.WAGON_INFO,
        'GOOD_COMPATIBILITY': cfg.GOOD_COMPATIBILITY,
    }
if 'game_state' not in st.session_state:
    st.session_state.game_state = ge.initialize_state(st.session_state.game_settings)

# --- –û–°–ù–û–í–ù–û–ô –ö–û–î –û–¢–†–ò–°–û–í–ö–ò ---
st.set_page_config(layout="wide")
st.title("–ñ–µ–ª–µ–∑–Ω—ã–µ –¥–æ—Ä–æ–≥–∏ –†–æ—Å—Å–∏–∏")
tab_game, tab_instruction, tab_settings = st.tabs(["üïπÔ∏è –ò–≥—Ä–∞", "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"])

# --- –í–ö–õ–ê–î–ö–ê "–ò–ì–†–ê" ---
with tab_game:
    state = st.session_state.game_state
    if state['game_over']:
        st.error(f"**–ò–ì–†–ê –û–ö–û–ù–ß–ï–ù–ê!**\n\n–ü—Ä–∏—á–∏–Ω–∞: {state['game_over_reason']}")
        if st.button("–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É (—Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏)"):
            st.session_state.game_state = ge.initialize_state(st.session_state.game_settings);
            st.rerun()
        st.stop()

    # –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å (—É–ø—Ä–æ—â–µ–Ω–∞)
    cols = st.columns(4);
    cols[0].markdown(f"**–†–∞—É–Ω–¥:** {state['round']}");
    cols[1].markdown(f"**–í—Ä–µ–º—è:** {state['time']}");
    cols[2].markdown(f"**–î–µ–Ω—å–≥–∏:** {state['money']} ‚ÇΩ");
    cols[3].markdown(f"**–°—Ç–∞–Ω—Ü–∏—è:** {state['station']}")
    if state['current_event']:
        with st.container(border=True): st.markdown(
            f"**–°–æ–±—ã—Ç–∏–µ —Ä–∞—É–Ω–¥–∞: {state['current_event']['name']}** ‚Äî *{state['current_event']['description']}*")
    st.markdown("---")

    col1, col2, col3 = st.columns([3, 3, 2])
    with col1:  # –ö–û–õ–û–ù–ö–ê –ü–û–ï–ó–î–ê –ò –†–ï–ú–û–ù–¢–ê
        st.markdown("#### –°–æ—Å—Ç–∞–≤ –ø–æ–µ–∑–¥–∞")
        # ... (–ö–æ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å–æ—Å—Ç–∞–≤–∞ –ø–æ–µ–∑–¥–∞, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
        header_cols = st.columns([2, 1, 3, 2]);
        header_cols[0].markdown("**–°–æ—Å—Ç–∞–≤**");
        header_cols[1].markdown("**–ó–¥–æ—Ä–æ–≤—å–µ**");
        header_cols[2].markdown("**–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å**");
        header_cols[3].markdown("**–î–µ–π—Å—Ç–≤–∏–µ**")
        loco_cols = st.columns([2, 1, 3, 2]);
        loco_cols[0].markdown("–õ–æ–∫–æ–º–æ—Ç–∏–≤");
        loco_cols[1].markdown(
            f'<span style="color:red; font-size:20px;">{"‚ô• " * state["loco_hp"]}</span><span style="color:lightgrey; font-size:20px;">{"‚ô• " * (3 - state["loco_hp"])}</span>',
            unsafe_allow_html=True)
        st.markdown("<hr style='margin:0.1rem 0'>", unsafe_allow_html=True)
        for i in range(1, 6):
            row_cols = st.columns([2, 1, 3, 2])
            wagon_info = state['settings']['WAGON_INFO'][i]
            if state[f"wagon_{i}_is_purchased"]:
                capacity = ge.get_current_capacity(state, i)
                fill_html = get_platform_fill_html(state[f"wagon_{i}_contents"], capacity) if wagon_info[
                                                                                                  'type'] == 'platform' else get_wagon_fill_html(
                    state[f"wagon_{i}_contents"], capacity)
                row_cols[0].markdown(wagon_info["name"]);
                row_cols[1].markdown(
                    f'<span style="color:red; font-size:20px;">{"‚ô• " * state[f"wagon_{i}_hp"]}</span><span style="color:lightgrey; font-size:20px;">{"‚ô• " * (3 - state[f"wagon_{i}_hp"])}</span>',
                    unsafe_allow_html=True);
                row_cols[2].markdown(fill_html, unsafe_allow_html=True)
            else:
                row_cols[0].markdown(f"<span style='color:grey;'>{wagon_info['name']}</span>", unsafe_allow_html=True);
                row_cols[1].markdown("<span style='color:grey;'>-</span>", unsafe_allow_html=True);
                row_cols[2].markdown("<span style='color:grey;'>–ù–µ –∫—É–ø–ª–µ–Ω</span>", unsafe_allow_html=True)
                if state['moves_made_this_round'] == 0 and state['station'] == 'A':
                    price = state['settings']['WAGON_PRICES'][i]
                    if row_cols[3].button(f"–ö—É–ø–∏—Ç—å ({price}‚ÇΩ)", key=f"buy_wagon_{i}"):
                        if state['money'] >= price:
                            st.session_state.game_state = ge.perform_action(state, "buy_wagon",
                                                                            wagon_index=i); st.rerun()
                        else:
                            st.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!")
            st.markdown("<hr style='margin:0.1rem 0'>", unsafe_allow_html=True)

        st.markdown("")
        if state['moves_made_this_round'] == 0 and state['station'] == 'A':
            with st.container(border=True):
                st.markdown("##### –ü—Ä–µ–¥—Ä–µ–π—Å–æ–≤–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ");
                needs_repair = False
                if 0 < state['loco_hp'] < 3:
                    needs_repair = True;
                    cost = int(state['settings']['REPAIR_LOCO'] * state['modifiers']['repair_cost_multiplier'])
                    cols = st.columns(2);
                    cols[0].markdown("**–õ–æ–∫–æ–º–æ—Ç–∏–≤**")
                    if cols[1].button(f"–†–µ–º–æ–Ω—Ç ({cost}‚ÇΩ)", key="depot_repair_loco", use_container_width=True):
                        if state['money'] >= cost:
                            st.session_state.game_state = ge.perform_action(state, "repair_loco"); st.rerun()
                        else:
                            st.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!")
                for i in range(1, 6):
                    if state[f"wagon_{i}_is_purchased"] and 0 < state[f"wagon_{i}_hp"] < 3:
                        needs_repair = True;
                        cost = int(state['settings']['REPAIR_WAGON'] * state['modifiers']['repair_cost_multiplier'])
                        cols = st.columns(2);
                        cols[0].markdown(f"**{state['settings']['WAGON_INFO'][i]['name']}**")
                        if cols[1].button(f"–†–µ–º–æ–Ω—Ç ({cost}‚ÇΩ)", key=f"depot_repair_wagon_{i}", use_container_width=True):
                            if state['money'] >= cost:
                                st.session_state.game_state = ge.perform_action(state, "repair_wagon",
                                                                                wagon_index=i); st.rerun()
                            else:
                                st.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥!")
                if not needs_repair: st.info("–í–µ—Å—å —Å–æ—Å—Ç–∞–≤ –≤ –æ—Ç–ª–∏—á–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏.")

    with col2:  # –ö–û–õ–û–ù–ö–ê –ö–û–ù–¢–†–ê–ö–¢–û–í
        st.markdown("#### –ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã")
        # ... (–ö–æ–¥ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤, –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...
        if not state['active_contracts']:
            st.info("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤.")
        else:
            act_header = st.columns([1, 2, 4, 1, 2]);
            act_header[0].markdown("**ID**");
            act_header[1].markdown("**–ú–∞—Ä—à—Ä—É—Ç**");
            act_header[2].markdown("**–¢–æ–≤–∞—Ä—ã**");
            act_header[3].markdown("**–°—Ä–æ–∫**");
            act_header[4].markdown("**–î–µ–π—Å—Ç–≤–∏–µ**")
            for contract in state['active_contracts']:
                act_cols = st.columns([1, 2, 4, 1, 2]);
                goods_str = f"{contract['goods_1']}√ó{contract['qty_1']}";
                if contract['goods_2']: goods_str += f", {contract['goods_2']}√ó{contract['qty_2']}";
                if contract['goods_3']: goods_str += f", {contract['goods_3']}√ó{contract['qty_3']}"
                status_color = "lightgreen" if contract.get('is_loaded') else "orange"
                act_cols[0].markdown(f"**{contract['id']}**");
                act_cols[1].markdown(
                    f"{contract['origin']}‚Üí{contract['destination']} <span style='color:{status_color};'>‚óè</span>",
                    unsafe_allow_html=True)
                act_cols[2].markdown(f"{goods_str} ({ge.calculate_current_price(contract, state)}‚ÇΩ)");
                act_cols[3].markdown(f"{contract['rounds_left']}")
                with act_cols[4]:
                    loading_forbidden = (state['station'] == 'A' and state['moves_made_this_round'] >= 2)
                    if not contract.get('is_loaded') and state['station'] == contract[
                        'origin'] and not loading_forbidden:
                        if st.button("–ü–æ–≥—Ä—É–∑–∫–∞", key=f"load_{contract['id']}"):
                            if ge.check_capacity_for_contract(state, contract):
                                st.session_state.game_state = ge.perform_action(state, "load_contract",
                                                                                contract_id=contract['id']); st.rerun()
                            else:
                                st.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞!")
                    if contract.get('is_loaded') and state['station'] == contract['destination']:
                        if st.button("–†–∞–∑–≥—Ä—É–∑–∫–∞", key=f"unload_{contract['id']}"):
                            st.session_state.game_state = ge.perform_action(state, "unload_contract",
                                                                            contract_id=contract['id']);
                            st.rerun()
        st.markdown("")
        if state['moves_made_this_round'] == 0:
            with st.container(border=True):
                st.markdown("##### –í–∑—è—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç")
                if len(state['active_contracts']) >= 4:
                    st.warning("–ú–∞–∫—Å–∏–º—É–º 4 –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞.")
                else:
                    contract_cols = st.columns(3);
                    can_take = state['modifiers']['can_take_contracts']
                    s_pool = [c for c in state['contracts_pool'] if c['id'].startswith('P')];
                    m_pool = [c for c in state['contracts_pool'] if c['id'].startswith('M')];
                    h_pool = [c for c in state['contracts_pool'] if c['id'].startswith('S')]
                    if contract_cols[0].button(f"–ü—Ä–æ—Å—Ç–æ–π ({len(s_pool)})", disabled=(not s_pool or not can_take),
                                               use_container_width=True): st.session_state.game_state = ge.perform_action(
                        state, "take_contract", ctype='P'); st.rerun()
                    if contract_cols[1].button(f"–°—Ä–µ–¥–Ω–∏–π ({len(m_pool)})", disabled=(not m_pool or not can_take),
                                               use_container_width=True): st.session_state.game_state = ge.perform_action(
                        state, "take_contract", ctype='M'); st.rerun()
                    if contract_cols[2].button(f"–°–ª–æ–∂–Ω—ã–π ({len(h_pool)})", disabled=(not h_pool or not can_take),
                                               use_container_width=True): st.session_state.game_state = ge.perform_action(
                        state, "take_contract", ctype='S'); st.rerun()

    with col3:  # –ö–û–õ–û–ù–ö–ê –î–ï–ô–°–¢–í–ò–ô
        with st.container(border=True):
            st.markdown("##### –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
            if st.button("–î–≤–∏–≥–∞—Ç—å—Å—è", disabled=(state['moves_made_this_round'] >= 2), use_container_width=True):
                st.session_state.game_state = ge.perform_action(state, "move");
                st.rerun()
            if st.button("–ö–æ–Ω–µ—Ü —Ä–∞—É–Ω–¥–∞", disabled=(state['station'] != 'A'),
                         help="–ó–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞—É–Ω–¥ –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ –ê.", use_container_width=True):
                st.session_state.game_state = ge.perform_action(state, "end_round");
                st.rerun()

            # --- –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ö–Ω–æ–ø–∫–∞ "–ù–æ–≤–∞—è –∏–≥—Ä–∞" –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∞ —Å—é–¥–∞ ---
            st.markdown("---")
            if st.button("–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É", type="secondary", use_container_width=True):
                st.session_state.confirm_restart_ingame = True

            if st.session_state.get("confirm_restart_ingame", False):
                st.warning("**–°–±—Ä–æ—Å–∏—Ç—å —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å?**")
                c1, c2 = st.columns(2)
                if c1.button("–î–∞", type="primary", use_container_width=True):
                    st.session_state.game_state = ge.initialize_state(st.session_state.game_settings)
                    st.session_state.confirm_restart_ingame = False;
                    st.rerun()
                if c2.button("–ù–µ—Ç", use_container_width=True):
                    st.session_state.confirm_restart_ingame = False;
                    st.rerun()

with tab_instruction:
    st.header("üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏–≥—Ä–µ ¬´–ñ–µ–ª–µ–∑–Ω—ã–µ –¥–æ—Ä–æ–≥–∏ –†–æ—Å—Å–∏–∏¬ª")
    st.markdown("---")

    st.subheader("üöÇ –ü—Ä–∏–≤–µ—Ç, –±—É–¥—É—â–∏–π –Ω–∞—á–∞–ª—å–Ω–∏–∫ –ø–æ–µ–∑–¥–æ–≤!")
    st.markdown("""
    **–¢–≤–æ—è —Ü–µ–ª—å** ‚Äî —Å—Ç–∞—Ç—å —Å–∞–º—ã–º —É—Å–ø–µ—à–Ω—ã–º –∏ –±–æ–≥–∞—Ç—ã–º –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –∂–µ–ª–µ–∑–Ω–æ–π –¥–æ—Ä–æ–≥–∏! –¢—ã –±—É–¥–µ—à—å –ø–µ—Ä–µ–≤–æ–∑–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –≥—Ä—É–∑—ã, –≤—ã–ø–æ–ª–Ω—è—Ç—å –∑–∞–¥–∞–Ω–∏—è (–∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã), —á–∏–Ω–∏—Ç—å —Å–≤–æ–π –ø–æ–µ–∑–¥ –∏ –ø–æ–∫—É–ø–∞—Ç—å –Ω–æ–≤—ã–µ –≤–∞–≥–æ–Ω—ã. –ß–µ–º –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ —Ç—ã –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å, —Ç–µ–º –ª—É—á—à–µ!
    """)

    st.subheader("üëÄ –¢–≤–æ–π –ø–µ—Ä–≤—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –∏–≥—Ä—É")
    st.markdown("""
    –ù–∞ –∏–≥—Ä–æ–≤–æ–º —ç–∫—Ä–∞–Ω–µ —Ç—ã —É–≤–∏–¥–∏—à—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã—Ö —á–∞—Å—Ç–µ–π:

    - **–í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å:** –ó–¥–µ—Å—å —Ç–≤–æ–∏ —Å–∞–º—ã–µ –≥–ª–∞–≤–Ω—ã–µ —Ü–∏—Ñ—Ä—ã:
        - **–†–∞—É–Ω–¥:** –°—á–∏—Ç–∞–π, —á—Ç–æ —ç—Ç–æ –æ–¥–∏–Ω –∏–≥—Ä–æ–≤–æ–π –¥–µ–Ω—å.
        - **–í—Ä–µ–º—è (‚è∞):** –¢–≤–æ–∏ "–æ—á–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π" –Ω–∞ —Ä–∞—É–Ω–¥. –ü–æ—á—Ç–∏ –≤—Å—ë, —á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å, —Ç—Ä–∞—Ç–∏—Ç –≤—Ä–µ–º—è!
        - **–î–µ–Ω—å–≥–∏ (üí∞):** –¢–≤–æ—è –∫–æ–ø–∏–ª–∫–∞. –¢—Ä–∞—Ç—å —Å —É–º–æ–º!
        - **–°—Ç–∞–Ω—Ü–∏—è:** –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –≥–¥–µ —Å–µ–π—á–∞—Å —Ç–≤–æ–π –ø–æ–µ–∑–¥: –Ω–∞ **–°—Ç–∞–Ω—Ü–∏–∏ –ê** (—Ç–≤–æ—è –±–∞–∑–∞) –∏–ª–∏ –Ω–∞ **–°—Ç–∞–Ω—Ü–∏–∏ –ë**.

    - **–°–æ–±—ã—Ç–∏–µ —Ä–∞—É–Ω–¥–∞:** –í –Ω–∞—á–∞–ª–µ –∫–∞–∂–¥–æ–≥–æ "–¥–Ω—è" (—Ä–∞—É–Ω–¥–∞) —Å–ª—É—á–∞–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ. –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ö–æ—Ä–æ—à–æ (–ø—Ä–µ–º–∏—è!) –∏–ª–∏ –ø–ª–æ—Ö–æ (–ø–æ–ª–æ–º–∫–∞!). –í—Å–µ–≥–¥–∞ —á–∏—Ç–∞–π, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ!

    - **–°–æ—Å—Ç–∞–≤ –ø–æ–µ–∑–¥–∞:** –≠—Ç–æ —Ç–≤–æ–π –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç!
        - **–ó–¥–æ—Ä–æ–≤—å–µ (‚ù§Ô∏è):** –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ü–µ–ª —Ç–≤–æ–π –ª–æ–∫–æ–º–æ—Ç–∏–≤ –∏–ª–∏ –≤–∞–≥–æ–Ω. 3 —Å–µ—Ä–¥–µ—á–∫–∞ ‚Äî –∏–¥–µ–∞–ª—å–Ω–æ! –ï—Å–ª–∏ —Å–µ—Ä–¥–µ—á–µ–∫ —Å—Ç–∞–Ω–µ—Ç 0, –≤–∞–≥–æ–Ω —Å–ª–æ–º–∞–µ—Ç—Å—è, –∞ –µ—Å–ª–∏ —Å–ª–æ–º–∞–µ—Ç—Å—è –ª–æ–∫–æ–º–æ—Ç–∏–≤ ‚Äî —ç—Ç–æ –∫–æ–Ω–µ—Ü –∏–≥—Ä—ã!
        - **–ó–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å (üî≤):** –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —Å–∫–æ–ª—å–∫–æ –º–µ—Å—Ç–∞ –≤ –≤–∞–≥–æ–Ω–µ –∏ —á—Ç–æ –≤ –Ω—ë–º –ª–µ–∂–∏—Ç.

    - **–ê–∫—Ç–∏–≤–Ω—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã:** –≠—Ç–æ —Ç–≤–æ–∏ —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞–Ω–∏—è. –ó–¥–µ—Å—å –≤–∏–¥–Ω–æ, –∫–∞–∫–æ–π –≥—Ä—É–∑, –æ—Ç–∫—É–¥–∞ –∏ –∫—É–¥–∞ –Ω—É–∂–Ω–æ –æ—Ç–≤–µ–∑—Ç–∏.

    - **–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:** –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–≥—Ä–æ–π.
    """)

    st.subheader("‚öôÔ∏è –ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω –∏–≥—Ä–æ–≤–æ–π —Ä–∞—É–Ω–¥ (–æ–¥–∏–Ω –¥–µ–Ω—å –∏–∑ –∂–∏–∑–Ω–∏)")
    st.markdown("""
    –ö–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ ‚Äî —ç—Ç–æ –∫–∞–∫ –æ–¥–∏–Ω —Ä–µ–π—Å. –¢—ã –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—à—å –∏ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—à—å –µ–≥–æ –Ω–∞ **–°—Ç–∞–Ω—Ü–∏–∏ –ê**.

    **–≠—Ç–∞–ø 1: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –≤ –î–µ–ø–æ (—Ç–æ–ª—å–∫–æ –≤ –Ω–∞—á–∞–ª–µ —Ä–∞—É–Ω–¥–∞ –Ω–∞ –°—Ç–∞–Ω—Ü–∏–∏ –ê)**
    –ü–æ–∫–∞ —Ç–≤–æ–π –ø–æ–µ–∑–¥ —Å—Ç–æ–∏—Ç –Ω–∞ –±–∞–∑–µ –∏ —Ç—ã –µ—â–µ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–æ–µ—Ö–∞–ª, —Ç—ã –º–æ–∂–µ—à—å:
    1.  **–ü–æ—á–∏–Ω–∏—Ç—å –ø–æ–µ–∑–¥:** –ï—Å–ª–∏ —É –ª–æ–∫–æ–º–æ—Ç–∏–≤–∞ –∏–ª–∏ –≤–∞–≥–æ–Ω–æ–≤ –º–µ–Ω—å—à–µ 3-—Ö —Å–µ—Ä–¥–µ—á–µ–∫, –∏—Ö –º–æ–∂–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—å. –†–µ–º–æ–Ω—Ç —Å—Ç–æ–∏—Ç –¥–µ–Ω–µ–≥ –∏ **1 –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏** (—Ç–æ–ª—å–∫–æ –∑–∞ –ø–µ—Ä–≤—ã–π —Ä–µ–º–æ–Ω—Ç –≤ —Ä–∞—É–Ω–¥–µ).
    2.  **–ö—É–ø–∏—Ç—å –Ω–æ–≤—ã–µ –≤–∞–≥–æ–Ω—ã:** –ï—Å–ª–∏ —Ö–≤–∞—Ç–∞–µ—Ç –¥–µ–Ω–µ–≥, –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —Å–≤–æ–π —Å–æ—Å—Ç–∞–≤.
    3.  **–í–∑—è—Ç—å –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã:** –í—ã–±–µ—Ä–∏ –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∫–∞–∂—É—Ç—Å—è —Ç–µ–±–µ –≤—ã–≥–æ–¥–Ω—ã–º–∏. –¢—ã –º–æ–∂–µ—à—å –∏–º–µ—Ç—å –¥–æ 4-—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.

    **–≠—Ç–∞–ø 2: –†–µ–π—Å!**
    –ö–æ–≥–¥–∞ —Ç—ã –≥–æ—Ç–æ–≤, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ:
    1.  **–ü–æ–≥—Ä—É–∑–∫–∞:** –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–ü–æ–≥—Ä—É–∑–∫–∞" –Ω–∞ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–µ. –¢–æ–≤–∞—Ä—ã –≤–æ–ª—à–µ–±–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –æ–∫–∞–∂—É—Ç—Å—è –≤ –Ω—É–∂–Ω—ã—Ö –≤–∞–≥–æ–Ω–∞—Ö. –≠—Ç–æ —Å—Ç–æ–∏—Ç 1 –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏.
    2.  **–î–≤–∏–∂–µ–Ω–∏–µ:** –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–î–≤–∏–≥–∞—Ç—å—Å—è". –¢–≤–æ–π –ø–æ–µ–∑–¥ –ø–æ–µ–¥–µ—Ç –Ω–∞ –¥—Ä—É–≥—É—é —Å—Ç–∞–Ω—Ü–∏—é (–∏–∑ –ê –≤ –ë, –∏–ª–∏ –∏–∑ –ë –≤ –ê). –≠—Ç–æ —Å—Ç–æ–∏—Ç 2 –µ–¥–∏–Ω–∏—Ü—ã –≤—Ä–µ–º–µ–Ω–∏. –ó–∞ –æ–¥–∏–Ω —Ä–∞—É–Ω–¥ –º–æ–∂–Ω–æ —Å—ä–µ–∑–¥–∏—Ç—å —Ç–æ–ª—å–∫–æ "—Ç—É–¥–∞ –∏ –æ–±—Ä–∞—Ç–Ω–æ" (–≤—Å–µ–≥–æ 2 —Ä–∞–∑–∞).
    3.  **–†–∞–∑–≥—Ä—É–∑–∫–∞:** –ö–æ–≥–¥–∞ —Ç—ã –ø—Ä–∏–µ—Ö–∞–ª –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è, –Ω–∞–∂–º–∏ "–†–∞–∑–≥—Ä—É–∑–∫–∞". –¢–æ–≤–∞—Ä –∏—Å—á–µ–∑–Ω–µ—Ç, –∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å–≤–æ–∏ —á–µ—Å—Ç–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏! –≠—Ç–æ —Å—Ç–æ–∏—Ç 1 –µ–¥–∏–Ω–∏—Ü—É –≤—Ä–µ–º–µ–Ω–∏.

    **–≠—Ç–∞–ø 3: –í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –∏ –∫–æ–Ω–µ—Ü —Ä–∞—É–Ω–¥–∞**
    –¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ ‚Äî **–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –°—Ç–∞–Ω—Ü–∏—é –ê –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤—Ä–µ–º—è!**
    –ö–æ–≥–¥–∞ —Ç—ã –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞ –°—Ç–∞–Ω—Ü–∏—é –ê, –Ω–∞–∂–º–∏ "–ö–æ–Ω–µ—Ü —Ä–∞—É–Ω–¥–∞". –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π "–¥–µ–Ω—å", –≤—Ä–µ–º—è –≤–æ—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è, –Ω–æ –±—É–¥—å –≥–æ—Ç–æ–≤:
    - **–°—Ä–æ–∫–∏ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —É–º–µ–Ω—å—à–∞—é—Ç—Å—è!** –ù–µ —É—Å–ø–µ–ª ‚Äî –ø–æ–ª—É—á–∏—à—å –º–µ–Ω—å—à–µ –¥–µ–Ω–µ–≥.
    - **–ü–æ–µ–∑–¥ –∏–∑–Ω–∞—à–∏–≤–∞–µ—Ç—Å—è:** –ï—Å—Ç—å —à–∞–Ω—Å, —á—Ç–æ –ª–æ–∫–æ–º–æ—Ç–∏–≤ –∏–ª–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞–≥–æ–Ω–æ–≤ –ø–æ–ª—É—á–∏—Ç –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–µ (–ø–æ—Ç–µ—Ä—è–µ—Ç 1 —Å–µ—Ä–¥–µ—á–∫–æ).
    """)

    st.subheader("üõ†Ô∏è –°–µ–∫—Ä–µ—Ç—ã —É—Å–ø–µ—à–Ω–æ–≥–æ –º–∞—à–∏–Ω–∏—Å—Ç–∞ (–í–∞–∂–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞!)",)

    st.markdown("**1. –ú–µ–Ω—å—à–µ —Å–µ—Ä–¥–µ—á–µ–∫ ‚Äî –º–µ–Ω—å—à–µ –º–µ—Å—Ç–∞ –≤ –≤–∞–≥–æ–Ω–µ!**")
    st.markdown("–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π –≤–∞–≥–æ–Ω –Ω–µ –º–æ–∂–µ—Ç –≤–µ–∑—Ç–∏ —Å—Ç–æ–ª—å–∫–æ –∂–µ –≥—Ä—É–∑–∞, —Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã–π. –≠—Ç–æ —Å–∞–º–æ–µ –≤–∞–∂–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ!")
    st.table({
        "–ó–¥–æ—Ä–æ–≤—å–µ (‚ù§Ô∏è)": ["‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è (3)", "‚ù§Ô∏è‚ù§Ô∏èüíî (2)", "‚ù§Ô∏èüíîüíî (1)"],
        "–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ü–æ–ª—É–≤–∞–≥–æ–Ω–∞/–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞": ["6 –º–µ—Å—Ç", "4 –º–µ—Å—Ç–∞", "2 –º–µ—Å—Ç–∞"],
        "–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã": ["3 –º–µ—Å—Ç–∞", "2 –º–µ—Å—Ç–∞", "1 –º–µ—Å—Ç–æ"]
    })

    st.markdown("**2. –ü–æ—á–µ–º—É –≤–∞–∂–Ω–æ –Ω–µ –æ–ø–∞–∑–¥—ã–≤–∞—Ç—å (–®—Ç—Ä–∞—Ñ—ã –∑–∞ –ø—Ä–æ—Å—Ä–æ—á–∫—É)**")
    st.markdown(
        "–ö–∞–∂–¥—ã–π —Ä–∞–∑, –∫–æ–≥–¥–∞ —Ç—ã –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—à—å —Ä–∞—É–Ω–¥, —É –≤—Å–µ—Ö —Ç–≤–æ–∏—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è '—Å—Ä–æ–∫ –≥–æ–¥–Ω–æ—Å—Ç–∏'. –ï—Å–ª–∏ —Ç—ã –ø—Ä–∏–≤–µ–∑–µ—à—å –≥—Ä—É–∑ —Å –æ–ø–æ–∑–¥–∞–Ω–∏–µ–º, –æ–Ω –±—É–¥–µ—Ç —Å—Ç–æ–∏—Ç—å –Ω–∞–º–Ω–æ–≥–æ –¥–µ—à–µ–≤–ª–µ.")
    st.table({
        "–¢–∏–ø –∫–æ–Ω—Ç—Ä–∞–∫—Ç–∞": ["–ü—Ä–æ—Å—Ç–æ–π (3 —Ä–∞—É–Ω–¥–∞)", "–°—Ä–µ–¥–Ω–∏–π (2 —Ä–∞—É–Ω–¥–∞)", "–°–ª–æ–∂–Ω—ã–π (1 —Ä–∞—É–Ω–¥)"],
        "–û–ø–æ–∑–¥–∞–Ω–∏–µ –Ω–∞ 1 —Ä–∞—É–Ω–¥": ["–ü–æ–ª—É—á–∏—à—å 90% —Ü–µ–Ω—ã", "–ü–æ–ª—É—á–∏—à—å 70% —Ü–µ–Ω—ã", "–ü–æ–ª—É—á–∏—à—å 40% —Ü–µ–Ω—ã"],
        "–û–ø–æ–∑–¥–∞–Ω–∏–µ –Ω–∞ 2+ —Ä–∞—É–Ω–¥–∞": ["–ü–æ–ª—É—á–∏—à—å –≤—Å–µ–≥–æ 20-60% —Ü–µ–Ω—ã", "–ü–æ–ª—É—á–∏—à—å –≤—Å–µ–≥–æ 30% —Ü–µ–Ω—ã",
                                   "–ö–æ–Ω—Ç—Ä–∞–∫—Ç –ø–æ—á—Ç–∏ –Ω–∏—á–µ–≥–æ –Ω–µ —Å—Ç–æ–∏—Ç"]
    })

    st.markdown("**3. –ö–∞–∂–¥–æ–º—É –≥—Ä—É–∑—É ‚Äî —Å–≤–æ–π –≤–∞–≥–æ–Ω!**")
    st.markdown("–¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–ª–æ–∂–∏—Ç—å —É–≥–æ–ª—å –≤ –≤–∞–≥–æ–Ω –¥–ª—è —è—â–∏–∫–æ–≤! –≠—Ç–æ –∫–∞–∫ –ø—ã—Ç–∞—Ç—å—Å—è –Ω–∞–ª–∏—Ç—å —Å—É–ø –≤ –∫–∞—Ä–º–∞–Ω.")
    st.markdown("""
    - **–£–≥–æ–ª—å –∏ –©–µ–±–µ–Ω—å** ‚Äî —Ç–æ–ª—å–∫–æ –≤ **–ü–æ–ª—É–≤–∞–≥–æ–Ω—ã**. –ü—Ä–∏—á–µ–º –≤ –æ–¥–∏–Ω –ø–æ–ª—É–≤–∞–≥–æ–Ω –Ω–µ–ª—å–∑—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –≥—Ä—É–∑–∏—Ç—å –∏ —É–≥–æ–ª—å, –∏ —â–µ–±–µ–Ω—å.
    - **–¶–≤–µ—Ç–Ω—ã–µ —è—â–∏–∫–∏** (–ñ–µ–ª—Ç—ã–π, –ó–µ–ª–µ–Ω—ã–π, –°–∏–Ω–∏–π) ‚Äî —Ç–æ–ª—å–∫–æ –≤ **–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã**.
    - **–ú–µ—Ç–∞–ª–ª** ‚Äî —Ç–æ–ª—å–∫–æ –Ω–∞ **–ü–ª–∞—Ç—Ñ–æ—Ä–º—É**.
    """)

    st.subheader("üèÜ –ö–∞–∫ —Å—Ç–∞—Ç—å –ª—É—á—à–∏–º? –°–æ–≤–µ—Ç—ã –∏ —Ö–∏—Ç—Ä–æ—Å—Ç–∏")
    st.markdown("""
    - **–°—Ç—Ä–∞—Ç–µ–≥–∏—è ¬´–û—Å—Ç–æ—Ä–æ–∂–Ω—ã–π –Ω–∞—á–∞–ª—å–Ω–∏–∫¬ª:** –ù–µ —Ä–∏—Å–∫—É–π! –í—Å–µ–≥–¥–∞ —á–∏–Ω–∏ —Å–≤–æ–π –ø–æ–µ–∑–¥, –µ—Å–ª–∏ —É –Ω–µ–≥–æ 2 —Å–µ—Ä–¥–µ—á–∫–∞. –ù–∞—á–∏–Ω–∞–π —Å –ø—Ä–æ—Å—Ç—ã—Ö –∏ —Å—Ä–µ–¥–Ω–∏—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤, —á—Ç–æ–±—ã –Ω–∞–∫–æ–ø–∏—Ç—å –¥–µ–Ω–µ–≥. –ü–æ–∫—É–ø–∞–π –Ω–æ–≤—ã–µ –≤–∞–≥–æ–Ω—ã, —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ —É —Ç–µ–±—è –µ—Å—Ç—å —Ö–æ—Ä–æ—à–∏–π –∑–∞–ø–∞—Å –≤ –∫–æ–ø–∏–ª–∫–µ. –ú–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –≤–µ—Ä–Ω–æ —Ç—ã —Å—Ç–∞–Ω–µ—à—å –±–æ–≥–∞—á–æ–º!

    - **–°—Ç—Ä–∞—Ç–µ–≥–∏—è ¬´–†–∏—Å–∫–æ–≤—ã–π –±–∏–∑–Ω–µ—Å–º–µ–Ω¬ª:** –ë–æ–ª—å—à–æ–π —Ä–∏—Å–∫ ‚Äî –±–æ–ª—å—à–∏–µ –¥–µ–Ω—å–≥–∏! –ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ –Ω–∞–∫–æ–ø–∏ –¥–µ–Ω–µ–≥, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å –ü–ª–∞—Ç—Ñ–æ—Ä–º—É. –ö–æ–Ω—Ç—Ä–∞–∫—Ç—ã –Ω–∞ –ú–µ—Ç–∞–ª–ª —Å–∞–º—ã–µ –¥–æ—Ä–æ–≥–∏–µ! –ù–æ –±—É–¥—å –≥–æ—Ç–æ–≤, —á—Ç–æ —Ç–≤–æ–π –ø–æ–µ–∑–¥ –±—É–¥–µ—Ç —á–∞—Å—Ç–æ –ª–æ–º–∞—Ç—å—Å—è, —Ç–∞–∫ –∫–∞–∫ —Ç—ã –±—É–¥–µ—à—å —ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞ —Ä–µ–º–æ–Ω—Ç–µ. –≠—Ç–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Ç–µ–±—è –æ—á–µ–Ω—å –±–æ–≥–∞—Ç—ã–º –∏–ª–∏ –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –∫ –ø—Ä–æ–∏–≥—Ä—ã—à—É!

    - **–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å!** –ü—Ä–µ–∂–¥–µ —á–µ–º –±—Ä–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç, —É–±–µ–¥–∏—Å—å, —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–π –≤–∞–≥–æ–Ω. –ù–µ—Ç —Å–º—ã—Å–ª–∞ –±—Ä–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç –Ω–∞ –ú–µ—Ç–∞–ª–ª, –µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –ü–ª–∞—Ç—Ñ–æ—Ä–º—ã.
    """)

    st.subheader("üìú –ü—Ä–∏–º–µ—Ä –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Ä–∞—É–Ω–¥–æ–≤")
    with st.expander("–ù–∞–∂–º–∏, —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø—Ä–∏–º–µ—Ä", expanded=True):
        st.markdown("""
        **–†–∞—É–Ω–¥ 1: –û—Ç–ª–∏—á–Ω—ã–π —Å—Ç–∞—Ä—Ç!**
        - **–ù–∞—á–∞–ª–æ:** –£ —Ç–µ–±—è 2000‚ÇΩ, 10 –≤—Ä–µ–º–µ–Ω–∏, 2 –≤–∞–≥–æ–Ω–∞ —Å 3-–º—è —Å–µ—Ä–¥–µ—á–∫–∞–º–∏. –¢—ã –Ω–∞ –°—Ç–∞–Ω—Ü–∏–∏ –ê.
        - **–°–æ–±—ã—Ç–∏–µ:** "–Ø—Å–Ω–∞—è –ø–æ–≥–æ–¥–∞". –£—Ä–∞, –Ω–∏–∫–∞–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º!
        - **–¢–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è:**
            1.  –†–µ–º–æ–Ω—Ç –Ω–µ –Ω—É–∂–µ–Ω, –≤—Å–µ —Ü–µ–ª–æ–µ.
            2.  –ë–µ—Ä–µ–º –ø—Ä–æ—Å—Ç–æ–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç "P1: –£–≥–æ–ª—å x6" (–ê ‚Üí –ë).
            3.  –ù–∞–∂–∏–º–∞–µ–º "–ü–æ–≥—Ä—É–∑–∫–∞". –£–≥–æ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤ –ü–æ–ª—É–≤–∞–≥–æ–Ω. **–í—Ä–µ–º—è: 9.**
            4.  –ù–∞–∂–∏–º–∞–µ–º "–î–≤–∏–≥–∞—Ç—å—Å—è". –ü–æ–µ–∑–¥ –µ–¥–µ—Ç –Ω–∞ –°—Ç–∞–Ω—Ü–∏—é –ë. **–í—Ä–µ–º—è: 7.**
            5.  –ù–∞–∂–∏–º–∞–µ–º "–†–∞–∑–≥—Ä—É–∑–∫–∞". –£–≥–æ–ª—å –∏—Å—á–µ–∑–∞–µ—Ç, –∞ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å, —Å–∫–∞–∂–µ–º, 720‚ÇΩ. **–í—Ä–µ–º—è: 6.** –¢–≤–æ–∏ –¥–µ–Ω—å–≥–∏: 2720‚ÇΩ.
            6.  –ù–∞–∂–∏–º–∞–µ–º "–î–≤–∏–≥–∞—Ç—å—Å—è". –ü–æ–µ–∑–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –Ω–∞ –°—Ç–∞–Ω—Ü–∏—é –ê. **–í—Ä–µ–º—è: 4.**
            7.  –ë–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ —É—Å–ø–µ—Ç—å. –ù–∞–∂–∏–º–∞–µ–º "–ö–æ–Ω–µ—Ü —Ä–∞—É–Ω–¥–∞".
        - **–ò—Ç–æ–≥ —Ä–∞—É–Ω–¥–∞:** –¢—ã –≤ –ø–ª—é—Å–µ! –ù–æ –≤ –∫–æ–Ω—Ü–µ —Ä–∞—É–Ω–¥–∞ —Ç–≤–æ–π –ª–æ–∫–æ–º–æ—Ç–∏–≤ –æ—Ç –∏–∑–Ω–æ—Å–∞ —Ç–µ—Ä—è–µ—Ç 1 —Å–µ—Ä–¥–µ—á–∫–æ (—Ç–µ–ø–µ—Ä—å —É –Ω–µ–≥–æ ‚ù§Ô∏è‚ù§Ô∏èüíî).

        **–†–∞—É–Ω–¥ 2: –ü–µ—Ä–≤–∞—è –ø—Ä–æ–±–ª–µ–º–∞**
        - **–ù–∞—á–∞–ª–æ:** –£ —Ç–µ–±—è 2720‚ÇΩ, 10 –≤—Ä–µ–º–µ–Ω–∏. –¢—ã –Ω–∞ –°—Ç–∞–Ω—Ü–∏–∏ –ê. –õ–æ–∫–æ–º–æ—Ç–∏–≤ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω!
        - **–°–æ–±—ã—Ç–∏–µ:** "–ü–æ–ª–æ–º–∫–∞ –ø—É—Ç–∏". –û –Ω–µ—Ç! –¢—ã —Ç–µ—Ä—è–µ—à—å 500‚ÇΩ –∏ 1 –≤—Ä–µ–º–µ–Ω–∏. **–î–µ–Ω—å–≥–∏: 2220‚ÇΩ, –í—Ä–µ–º—è: 9.**
        - **–¢–≤–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è:**
            1.  **–°–ù–ê–ß–ê–õ–ê –†–ï–ú–û–ù–¢!** –¢–≤–æ–π –ª–æ–∫–æ–º–æ—Ç–∏–≤ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω. –ó–∞—Ö–æ–¥–∏–º –≤ "–ü—Ä–µ–¥—Ä–µ–π—Å–æ–≤–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ" –∏ —á–∏–Ω–∏–º –µ–≥–æ –∑–∞ 500‚ÇΩ. –≠—Ç–æ —Ç–∞–∫–∂–µ —Ç—Ä–∞—Ç–∏—Ç 1 –≤—Ä–µ–º–µ–Ω–∏. **–î–µ–Ω—å–≥–∏: 1720‚ÇΩ, –í—Ä–µ–º—è: 8.**
            2.  –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –±—Ä–∞—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã. –í–æ–∑—å–º–µ–º "P3: –ñ–µ–ª—Ç—ã–π x6" (–ë ‚Üí –ê).
            3.  –ù–∞–º –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –¥–æ–µ—Ö–∞—Ç—å –¥–æ –≥—Ä—É–∑–∞. –ù–∞–∂–∏–º–∞–µ–º "–î–≤–∏–≥–∞—Ç—å—Å—è". –ü–æ–µ–∑–¥ –µ–¥–µ—Ç –Ω–∞ –°—Ç–∞–Ω—Ü–∏—é –ë. **–í—Ä–µ–º—è: 6.**
            4.  –ù–∞ –°—Ç–∞–Ω—Ü–∏–∏ –ë –Ω–∞–∂–∏–º–∞–µ–º "–ü–æ–≥—Ä—É–∑–∫–∞". –Ø—â–∏–∫–∏ –≤ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ. **–í—Ä–µ–º—è: 5.**
            5.  –ù–∞–∂–∏–º–∞–µ–º "–î–≤–∏–≥–∞—Ç—å—Å—è". –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –°—Ç–∞–Ω—Ü–∏—é –ê. **–í—Ä–µ–º—è: 3.**
            6.  –ù–∞ –°—Ç–∞–Ω—Ü–∏–∏ –ê –Ω–∞–∂–∏–º–∞–µ–º "–†–∞–∑–≥—Ä—É–∑–∫–∞". –ü–æ–ª—É—á–∞–µ–º –¥–µ–Ω—å–≥–∏! **–í—Ä–µ–º—è: 2.**
            7.  –ù–∞–∂–∏–º–∞–µ–º "–ö–æ–Ω–µ—Ü —Ä–∞—É–Ω–¥–∞".
        - **–ò—Ç–æ–≥ —Ä–∞—É–Ω–¥–∞:** –¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏ –∏ —Å–Ω–æ–≤–∞ –≤ –ø–ª—é—Å–µ!
        """)

    st.subheader("‚ò†Ô∏è –ö–æ–≥–¥–∞ –∏–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è?")
    st.warning("""
    –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω! –¢–≤–æ—è –∫–∞—Ä—å–µ—Ä–∞ –Ω–∞—á–∞–ª—å–Ω–∏–∫–∞ –ø–æ–µ–∑–¥–æ–≤ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è, –µ—Å–ª–∏:
    1.  **–õ–æ–∫–æ–º–æ—Ç–∏–≤ —Å–ª–æ–º–∞–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é** (–∑–¥–æ—Ä–æ–≤—å–µ —É–ø–∞–¥–µ—Ç –¥–æ 0).
    2.  **–¢–≤–æ–∏ –¥–µ–Ω—å–≥–∏ —É–π–¥—É—Ç –≤ –º–∏–Ω—É—Å** (—Ç—ã —Å—Ç–∞–Ω–µ—à—å –±–∞–Ω–∫—Ä–æ—Ç–æ–º).
    3.  **–í—Ä–µ–º—è –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è (—Å—Ç–∞–Ω–µ—Ç 0), –∞ —Ç–≤–æ–π –ø–æ–µ–∑–¥ –±—É–¥–µ—Ç –Ω–∞ –°—Ç–∞–Ω—Ü–∏–∏ –ë.** –¢—ã –Ω–µ —É—Å–ø–µ–ª –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –±–∞–∑—É!
    """)

with tab_settings:
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –∏–≥—Ä—ã")
    st.info("–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ '–ü—Ä–∏–º–µ–Ω–∏—Ç—å' –≤–Ω–∏–∑—É.")
    with st.expander("–û—Å–Ω–æ–≤–Ω—ã–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã", expanded=True):
        st.session_state.game_settings['STARTING_MONEY'] = st.number_input("–°—Ç–∞—Ä—Ç–æ–≤—ã–µ –¥–µ–Ω—å–≥–∏ (‚ÇΩ)", 0, step=500,
                                                                           value=st.session_state.game_settings[
                                                                               'STARTING_MONEY'])
        st.session_state.game_settings['REPAIR_LOCO'] = st.number_input("–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞ –ª–æ–∫–æ–º–æ—Ç–∏–≤–∞ (‚ÇΩ)", 0, step=50,
                                                                        value=st.session_state.game_settings[
                                                                            'REPAIR_LOCO'])
        st.session_state.game_settings['REPAIR_WAGON'] = st.number_input("–°—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–º–æ–Ω—Ç–∞ –≤–∞–≥–æ–Ω–∞ (‚ÇΩ)", 0, step=50,
                                                                         value=st.session_state.game_settings[
                                                                             'REPAIR_WAGON'])
    st.subheader("–¶–µ–Ω—ã –Ω–∞ –ø–æ–∫—É–ø–∫—É –≤–∞–≥–æ–Ω–æ–≤")
    cols = st.columns(2)
    for i in range(1, 6):
        wagon_name = cfg.WAGON_INFO[i]['name']
        st.session_state.game_settings['WAGON_PRICES'][i] = cols[(i - 1) % 2].number_input(f"–¶–µ–Ω–∞ '{wagon_name}'", 0,
                                                                                           step=100, value=
                                                                                           st.session_state.game_settings[
                                                                                               'WAGON_PRICES'][i])
    st.subheader("–¶–µ–Ω—ã –Ω–∞ —Ç–æ–≤–∞—Ä—ã (–≤–ª–∏—è—é—Ç –Ω–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤)")
    cols = st.columns(3)
    good_keys = list(cfg.GOODS_PRICES.keys())
    for i, good in enumerate(good_keys):
        st.session_state.game_settings['GOODS_PRICES'][good] = cols[i % 3].number_input(f"–¶–µ–Ω–∞ '{good}'", 0, step=10,
                                                                                        value=
                                                                                        st.session_state.game_settings[
                                                                                            'GOODS_PRICES'][good])
    st.markdown("---")
    if st.button("–ü—Ä–∏–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É", type="primary"):
        st.session_state.game_state = ge.initialize_state(st.session_state.game_settings)
        st.success("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã! –ù–æ–≤–∞—è –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å –Ω–∞ –≤–∫–ª–∞–¥–∫–µ '–ò–≥—Ä–∞'.")
        st.balloons()  # <-- –î–æ–±–∞–≤–ª–µ–Ω–∞ —è—Ä–∫–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å!
        # st.rerun() # rerun –∑–¥–µ—Å—å –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑–±—ã—Ç–æ—á–Ω—ã–º, —Ç–∞–∫ –∫–∞–∫ —Å–º–µ–Ω–∞ –≤–∏–¥–∂–µ—Ç–æ–≤ –µ–≥–æ –≤—ã–∑–æ–≤–µ—Ç